#ifndef _FIRMWARE_CONFIG_REGS_H_
#define _FIRMWARE_CONFIG_REGS_H_

#include "stdint.h"

#define ETH_BASE 0x60200000

#define ETH_VENDOR (*(volatile uint64_t *)(ETH_BASE + 0x0))
#define ETH_CLOCK (*(volatile uint64_t *)(ETH_BASE + 0x8))
#define ETH_MAC_0 (*(volatile uint64_t *)(ETH_BASE + 0x10))
#define ETH_MAC (&ETH_MAC_0)
#define ETH_MAC_1 (*(volatile uint64_t *)(ETH_BASE + 0x18))
#define ETH_MAC_2 (*(volatile uint64_t *)(ETH_BASE + 0x20))
#define ETH_MAC_3 (*(volatile uint64_t *)(ETH_BASE + 0x28))
#define ETH_MTU_0 (*(volatile uint64_t *)(ETH_BASE + 0x30))
#define ETH_MTU (&ETH_MTU_0)
#define ETH_MTU_1 (*(volatile uint64_t *)(ETH_BASE + 0x38))
#define ETH_MTU_2 (*(volatile uint64_t *)(ETH_BASE + 0x40))
#define ETH_MTU_3 (*(volatile uint64_t *)(ETH_BASE + 0x48))
#define ETH_CONFIG_0 (*(volatile uint64_t *)(ETH_BASE + 0x50))
#define ETH_CONFIG (&ETH_CONFIG_0)
#define ETH_CONFIG_1 (*(volatile uint64_t *)(ETH_BASE + 0x58))
#define ETH_CONFIG_2 (*(volatile uint64_t *)(ETH_BASE + 0x60))
#define ETH_CONFIG_3 (*(volatile uint64_t *)(ETH_BASE + 0x68))
#define ETH_IPV4_CONVERTED_PREFIX (*(volatile uint64_t *)(ETH_BASE + 0x70))
#define ETH_IPV4_CONVERTED_PREFIX_HI (*(volatile uint64_t *)(ETH_BASE + 0x78))
#define ETH_IPV4_TRANSLATABLE_PREFIX (*(volatile uint64_t *)(ETH_BASE + 0x80))
#define ETH_IPV4_TRANSLATABLE_PREFIX_HI (*(volatile uint64_t *)(ETH_BASE + 0x88))
#define ETH_IPV6_CONVERTED_PREFIX (*(volatile uint64_t *)(ETH_BASE + 0x90))
#define ETH_IPV6_CONVERTED_MASK (*(volatile uint64_t *)(ETH_BASE + 0x98))
#define ETH_IPV4_POOL_PREFIX (*(volatile uint64_t *)(ETH_BASE + 0xa0))
#define ETH_IPV4_POOL_MASK (*(volatile uint64_t *)(ETH_BASE + 0xa8))
#define ETH_DEFAULT_NEXTHOP_ID (*(volatile uint64_t *)(ETH_BASE + 0xb0))
#define ETH_AMC_WRITE_EN (*(volatile uint64_t *)(ETH_BASE + 0xb8))
#define ETH_AMC_ADDR (*(volatile uint64_t *)(ETH_BASE + 0xc0))
#define ETH_AMC_ADDR_HI (*(volatile uint64_t *)(ETH_BASE + 0xc8))
#define ETH_AMC_HASH_EN (*(volatile uint64_t *)(ETH_BASE + 0xd0))
#define ETH_AMC_VALID (*(volatile uint64_t *)(ETH_BASE + 0xd8))
#define ETH_AMC_MATCH (*(volatile uint64_t *)(ETH_BASE + 0xe0))
#define ETH_AMC_TAG_0 (*(volatile uint64_t *)(ETH_BASE + 0xe8))
#define ETH_AMC_TAG (&ETH_AMC_TAG_0)
#define ETH_AMC_TAG_1 (*(volatile uint64_t *)(ETH_BASE + 0xf0))
#define ETH_AMC_TAG_2 (*(volatile uint64_t *)(ETH_BASE + 0xf8))
#define ETH_AMC_TAG_3 (*(volatile uint64_t *)(ETH_BASE + 0x100))
#define ETH_AMC_TAG_HI_0 (*(volatile uint64_t *)(ETH_BASE + 0x108))
#define ETH_AMC_TAG_HI (&ETH_AMC_TAG_HI_0)
#define ETH_AMC_TAG_HI_1 (*(volatile uint64_t *)(ETH_BASE + 0x110))
#define ETH_AMC_TAG_HI_2 (*(volatile uint64_t *)(ETH_BASE + 0x118))
#define ETH_AMC_TAG_HI_3 (*(volatile uint64_t *)(ETH_BASE + 0x120))
#define ETH_AMC_VALUE_0 (*(volatile uint64_t *)(ETH_BASE + 0x128))
#define ETH_AMC_VALUE (&ETH_AMC_VALUE_0)
#define ETH_AMC_VALUE_1 (*(volatile uint64_t *)(ETH_BASE + 0x130))
#define ETH_AMC_VALUE_2 (*(volatile uint64_t *)(ETH_BASE + 0x138))
#define ETH_AMC_VALUE_3 (*(volatile uint64_t *)(ETH_BASE + 0x140))
#define ETH_AMC_VALUE_HI_0 (*(volatile uint64_t *)(ETH_BASE + 0x148))
#define ETH_AMC_VALUE_HI (&ETH_AMC_VALUE_HI_0)
#define ETH_AMC_VALUE_HI_1 (*(volatile uint64_t *)(ETH_BASE + 0x150))
#define ETH_AMC_VALUE_HI_2 (*(volatile uint64_t *)(ETH_BASE + 0x158))
#define ETH_AMC_VALUE_HI_3 (*(volatile uint64_t *)(ETH_BASE + 0x160))
#define ETH_AMC_ATIME_0 (*(volatile uint64_t *)(ETH_BASE + 0x168))
#define ETH_AMC_ATIME (&ETH_AMC_ATIME_0)
#define ETH_AMC_ATIME_1 (*(volatile uint64_t *)(ETH_BASE + 0x170))
#define ETH_AMC_ATIME_2 (*(volatile uint64_t *)(ETH_BASE + 0x178))
#define ETH_AMC_ATIME_3 (*(volatile uint64_t *)(ETH_BASE + 0x180))
#define ETH_ARC_WRITE_EN (*(volatile uint64_t *)(ETH_BASE + 0x188))
#define ETH_ARC_ADDR (*(volatile uint64_t *)(ETH_BASE + 0x190))
#define ETH_ARC_ADDR_HI (*(volatile uint64_t *)(ETH_BASE + 0x198))
#define ETH_ARC_ADDR_EXTRA (*(volatile uint64_t *)(ETH_BASE + 0x1a0))
#define ETH_ARC_HASH_EN (*(volatile uint64_t *)(ETH_BASE + 0x1a8))
#define ETH_ARC_VALID (*(volatile uint64_t *)(ETH_BASE + 0x1b0))
#define ETH_ARC_MATCH (*(volatile uint64_t *)(ETH_BASE + 0x1b8))
#define ETH_ARC_TAG_0 (*(volatile uint64_t *)(ETH_BASE + 0x1c0))
#define ETH_ARC_TAG (&ETH_ARC_TAG_0)
#define ETH_ARC_TAG_1 (*(volatile uint64_t *)(ETH_BASE + 0x1c8))
#define ETH_ARC_TAG_2 (*(volatile uint64_t *)(ETH_BASE + 0x1d0))
#define ETH_ARC_TAG_3 (*(volatile uint64_t *)(ETH_BASE + 0x1d8))
#define ETH_ARC_TAG_HI_0 (*(volatile uint64_t *)(ETH_BASE + 0x1e0))
#define ETH_ARC_TAG_HI (&ETH_ARC_TAG_HI_0)
#define ETH_ARC_TAG_HI_1 (*(volatile uint64_t *)(ETH_BASE + 0x1e8))
#define ETH_ARC_TAG_HI_2 (*(volatile uint64_t *)(ETH_BASE + 0x1f0))
#define ETH_ARC_TAG_HI_3 (*(volatile uint64_t *)(ETH_BASE + 0x1f8))
#define ETH_ARC_TAG_EXTRA_0 (*(volatile uint64_t *)(ETH_BASE + 0x200))
#define ETH_ARC_TAG_EXTRA (&ETH_ARC_TAG_EXTRA_0)
#define ETH_ARC_TAG_EXTRA_1 (*(volatile uint64_t *)(ETH_BASE + 0x208))
#define ETH_ARC_TAG_EXTRA_2 (*(volatile uint64_t *)(ETH_BASE + 0x210))
#define ETH_ARC_TAG_EXTRA_3 (*(volatile uint64_t *)(ETH_BASE + 0x218))
#define ETH_ARC_VALUE_0 (*(volatile uint64_t *)(ETH_BASE + 0x220))
#define ETH_ARC_VALUE (&ETH_ARC_VALUE_0)
#define ETH_ARC_VALUE_1 (*(volatile uint64_t *)(ETH_BASE + 0x228))
#define ETH_ARC_VALUE_2 (*(volatile uint64_t *)(ETH_BASE + 0x230))
#define ETH_ARC_VALUE_3 (*(volatile uint64_t *)(ETH_BASE + 0x238))
#define ETH_ARC_ATIME_0 (*(volatile uint64_t *)(ETH_BASE + 0x240))
#define ETH_ARC_ATIME (&ETH_ARC_ATIME_0)
#define ETH_ARC_ATIME_1 (*(volatile uint64_t *)(ETH_BASE + 0x248))
#define ETH_ARC_ATIME_2 (*(volatile uint64_t *)(ETH_BASE + 0x250))
#define ETH_ARC_ATIME_3 (*(volatile uint64_t *)(ETH_BASE + 0x258))

#endif
